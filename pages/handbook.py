import streamlit as st

with st.expander("Class1筆記"):
    st.write(
        """
這裡是你今天上課學到的 Python 指令，用**國小六年級也能看懂的方式**幫你整理如下：

---

### 🟨 1. 註解（說明用，不會執行）

- `#` 開頭：**單行註解**，電腦不會執行，是寫給人看的說明
- `\""" 多行內容 \"""`：**多行註解**

---

### 🟨 2. 印出內容

```python
print("hello")
```

- `print()` 是**把東西顯示在螢幕上**

---

### 🟨 3. 基本資料型態（就是資料的種類）

| 內容  | 型態（名稱） | 範例            |
| ----- | ------------ | --------------- |
| 整數  | `int`        | 1, -5, 100      |
| 小數  | `float`      | 1.0, 3.14       |
| 文字  | `str`        | "apple", "123"  |
| 是/否 | `bool`       | `True`, `False` |

---

### 🟨 4. 變數（就像一個可以存東西的盒子）

```python
a = 10
```

- `a` 是變數名字，`10` 是它的內容
- 把 `10` 放進 `a` 裡
- 之後可以改內容：`a = "apple"`

---

### 🟨 5. 運算子（加減乘除）

| 符號 | 意思           | 範例           |
| ---- | -------------- | -------------- |
| `+`  | 加法           | `1 + 2`        |
| `-`  | 減法           | `5 - 3`        |
| `*`  | 乘法           | `2 * 3`        |
| `/`  | 除法（有小數） | `4 / 2`        |
| `//` | 除法取整數     | `7 // 2` → `3` |
| `%`  | 取餘數         | `7 % 2` → `1`  |
| `**` | 次方           | `2**3` → `8`   |

---

### 🟨 6. 運算順序（跟數學一樣）

1. `()` 先做括號
2. `**` 次方
3. `* / // %` 乘除
4. `+ -` 加減

---

### 🟨 7. 字串的加法和乘法

```python
print("apple" + " pen")  # 合併字串
print("apple " * 3)  # 重複字串3次
```

---

### 🟨 8. 字串長度和型態

```python
len("apple")  # 算出字串長度（幾個字）
type(東西)    # 看這個東西是哪一種型態
```

---

### 🟨 9. 型態轉換（改變資料的種類）

| 原來        | 轉成            | 怎麼寫 |
| ----------- | --------------- | ------ |
| 整數 → 字串 | `str(1)`        |        |
| 小數 → 整數 | `int(1.234)`    |        |
| 字串 → 小數 | `float("1.23")` |        |
| 任何 → 布林 | `bool(...)`     |        |

⚠️ `int("hello")` 會錯，因為 "hello" 不是數字。

---

### 🟨 10. 使用者輸入（input）

```python
a = input("請輸入一些文字:")
```

- `input()` 會讓使用者在畫面上輸入資料
- 輸入的東西**一律是字串（str）**
- 如果要當作數字用，要先轉型 `int(input(...))`

---

### 🟨 11. 小小應用練習

```python
a = int(input("請輸入半徑:"))
print(3.14 * a * a)  # 計算圓面積

B = int(input("請輸入國文期中成績:"))
c = int(input("請輸入國文期末成績:"))
print("國文平均成績:", (B + c) / 2)
```

---

### 🟨 12. 字串格式化（f-string）

```python
name = "小明"
age = 18
print(f"hello, my name is {name}, I am {age} years old")
```

- 用 `f"..."` 開頭，裡面可以放變數 `{}`

---

"""
    )

with st.expander("Class2筆記"):
    st.write(
        """
太棒了！你今天上課學到的 Python 指令已經很豐富了！
我幫你用**國小六年級可以理解的方式**整理成簡單重點：

---

## 🟧 一、輸入 & 計算練習

### ✅ 1. 使用者輸入

```python
a = int(input("請輸入半徑:"))
```

* `input()` 會請使用者輸入東西（文字）
* `int(...)` 把輸入的東西轉成數字

### ✅ 2. 計算圓面積

```python
print(3.14 * a * a)
```

* 用公式「半徑 × 半徑 × 3.14」算出圓的面積

### ✅ 3. 成績平均

```python
B = int(input("期中"))
c = int(input("期末"))
print((B + c) / 2)
```

* 把期中 + 期末後除以 2，就是平均成績

---

## 🟧 二、字串格式化（變數放進句子裡）

```python
name = "小明"
age = 18
print(f"hello, my name is {name}, I am {age} years old")
```

* `f"..."` 是特別的寫法，叫做 f-string
* 可以把變數直接放進 `{}` 裡

---

## 🟧 三、比較運算（比大小、比一不一樣）

| 運算式  | 意思    | 結果               |
| ---- | ----- | ---------------- |
| `==` | 是否相等  | `1 == 1` → True  |
| `!=` | 是否不相等 | `1 != 1` → False |
| `<`  | 小於    | `1 < 2` → True   |
| `>`  | 大於    | `2 > 3` → False  |
| `<=` | 小於等於  | `1 <= 1` → True  |
| `>=` | 大於等於  | `2 >= 1` → True  |

---

## 🟧 四、邏輯運算（多個條件一起判斷）

| 運算式   | 結果                  | 意思                          |
| ----- | ------------------- | --------------------------- |
| `and` | 兩邊都要是 True 才會是 True | 例如：`True and False` → False |
| `or`  | 只要一邊是 True 就是 True  | 例如：`True or False` → True   |
| `not` | 反過來                 | `not True` → False          |

---

## 🟧 五、運算優先順序（誰先算）

從最優先到最慢：

1. `()` 小括號
2. `**` 次方
3. `* / // %` 乘除、取商、取餘數
4. `+ -` 加減
5. 比較（==、!=、<、>、<=、>=）
6. `not`
7. `and`
8. `or`

---

## 🟧 六、密碼門（判斷用 if、elif、else）

```python
password = input("請輸入密碼:")
if password == "1234":
    print("welcome Leo")
elif password == "12345":
    print("welcome tim")
elif password == "123456":
    print("welcome jack")
else:
    print("密碼錯誤，請重新輸入")
```

### 🧠 小提醒：

* `if`：如果
* `elif`：否則如果（只會執行第一個符合的）
* `else`：其他所有情況（前面都不符合才會執行）

### 🆚 if 和 elif 差別：

| 多個 if        | if + elif    |
| ------------ | ------------ |
| 每個 if 都會判斷一次 | 一旦符合就不會再看下面的 |
| 比較慢          | 比較快          |
| 適合做獨立的條件     | 適合做有關聯的條件選擇  |

---

如果你想把這些做成筆記、圖卡、或表格，我也可以幫你整理唷 😊
要不要我幫你做一頁簡單的學習小抄？

"""
    )
